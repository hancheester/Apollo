@using Apollo.Core;
@using Apollo.FrontStore.Models.Category;
@using Apollo.Core.Infrastructure;
@using Apollo.Core.Domain.Seo;

@model CategoryModel

@{
    Html.AddTitleParts(Model.Category.Name);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;

    if (canonicalUrlsEnabled)
    {
        var categoryUrl = "";
        if (string.IsNullOrEmpty(Model.SelectedSecondCategoryUrl) == false)
        {
            categoryUrl = Url.RouteUrl("Category With Products AMP", new { top = Model.Category.UrlKey, second = Model.SelectedSecondCategoryUrl, third = "" }, this.Request.Url.Scheme);
        }

        if (string.IsNullOrEmpty(Model.SelectedThirdCategoryUrl) == false)
        {
            categoryUrl = Url.RouteUrl("Category With Products AMP", new { top = Model.Category.UrlKey, second = Model.SelectedSecondCategoryUrl, third = Model.SelectedThirdCategoryUrl }, this.Request.Url.Scheme);
        }

        var currentPageNumber = Model.PagingFilteringContext.PageNumber;
        var nextPageNumber = Model.PagingFilteringContext.TotalPages >= (currentPageNumber + 1) ? currentPageNumber + 1 : 0;
        var prevPageNumber = currentPageNumber > 1 ? currentPageNumber - 1 : 0;

        Html.AddCanonicalUrlParts(categoryUrl + (currentPageNumber > 1 ? string.Format("?pagenumber={0}", currentPageNumber) : null));

        if (prevPageNumber > 0)
        {
            Html.AddPrevUrlParts(string.Format("{0}?pagenumber={1}", categoryUrl, prevPageNumber));
        }

        if (currentPageNumber > 0 && nextPageNumber != 0)
        {
            Html.AddNextUrlParts(string.Format("{0}?pagenumber={1}", categoryUrl, nextPageNumber));
        }
    }

    var workContext = EngineContext.Current.Resolve<IWorkContext>();
    var currencyHtmlEntity = workContext.WorkingCurrency.HtmlEntity;
    var categoryTitle = string.IsNullOrEmpty(Model.SelectedThirdCategoryUrl) ? Model.SelectedSecondCategoryName : Model.SelectedThirdCategoryName;

}

@section amp_custom
{
    .side-nav h3 {
        margin-top: 10px;
        text-transform: uppercase;
        font-size: 16px;
        line-height: 25px;
    }

    .side-nav h3 ~ .filter-refine {
        position: absolute;
        right: 10px;
        top: 60px;
        background: #ddd;
        padding: 5px;
        text-decoration: none;
        width: 60px;
        text-align: center;
        text-transform: uppercase;
    }

    .side-nav h3 ~ .filter-refine:before {
        content: "refine";
    }

    .side-nav #refine-panel .panel-group {
        margin-bottom: 0;
    }

    .side-nav .panel-default {
        border: 0;
        background: none;
        border-radius: 0;
        box-shadow: none;
        border-bottom: 1px solid #eee;
    }

    .panel-heading {
        padding: 10px 15px;
        border-bottom: 1px solid transparent;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
    }

    .panel-group .panel-heading {
        border-bottom: 0;
    }

    .panel-group .panel+.panel {
        margin-top: 5px;
    }

    .panel-default>.panel-heading {
        color: #333;
        background-color: #f5f5f5;
        border-color: #ddd;
    }

    

    #category .content {
        margin-bottom: 10px;
    }

    #category .container > div.content, #blog .container > div.content {
        margin-left: 0;
        margin-right: 0;
        padding-left: 0;
        padding-right: 0;
    }

    #category .products {
        margin-top: 5px;
    }
}

<div id="category">
    <div class="container">
        <div class="side-nav visible-xs">
            <h3>@Html.Raw(categoryTitle)</h3>            
        </div>        
        <div class="content col-sm-9 col-lg-8">            
            <div class="products col-sm-12">
                @if (Model.Products.Count > 0)
                {
                    foreach (var item in Model.Products)
                    {
                        @Html.Partial("_ProductBox", item)   
                    }
                }
            </div>

            @{
                var pager = Html.Pager(Model.PagingFilteringContext)
                    .QueryParam("pagenumber")
                    .BooleanParameterName("adv")
                    .BooleanParameterName("isc")
                    .BooleanParameterName("sid")
                    .RenderEmptyParameters(true);
            }
            @if (!pager.IsEmpty())
            {
                <div class="pagination-footer sm-col-12 text-center">
                    @Html.Raw(pager)
                </div>
            }
        </div>
    </div>
</div>