@using Apollo.Core.Model;
@using Apollo.FrontStore.Models.Common;
@using Apollo.Web.Framework;

@model AddressModel

@{
    var title = "New Address";
    switch (Model.AddressType)
    {
        case AddressType.Billing:
            title = "New Billing Address";
            break;
        case AddressType.Shipping:
            title = "New Shipping Address";
            break;
        case AddressType.Both:
        default:
            break;
    }
    
    Html.AddTitleParts(title);
}

<div id="breadcrumb">
    <div class="container list">
        <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/cart">Cart</a></li>
            <li><a href="/" class="active">Address</a></li>
        </ul>
    </div>
</div>

<div id="checkout">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h4>@title</h4>
            </div>

            <div class="address col-xs-12 col-lg-6">
                @using (Html.BeginForm())
                {
                    var validationSummary = Html.ValidationSummary(true);
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error alert alert-danger">@validationSummary</div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)@Html.RequiredHint()
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine1)@Html.RequiredHint()
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.AddressLine1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AddressLine1)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine2)
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.AddressLine2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AddressLine2)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City)@Html.RequiredHint()
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.City)
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.PostCode)
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.PostCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PostCode)
                        </div>
                    </div>

                    <div class="states form-group" style="display: none;">
                        @Html.LabelFor(model => model.USState)
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.USStateId, Model.AvailableStates, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryName)@Html.RequiredHint()
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, new { @class = "country-list form-control" })
                            @Html.ValidationMessageFor(model => model.CountryId)
                        </div>
                    </div>
                    
                    <div class="form-group col-lg-6 row">
                        <input type="submit" class="button add-address" value="ADD ADDRESS" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        (function () {
            $('.country-list').change(function () {                
                var country = $(this).find('option:selected').text();
                
                if (country === 'United States') {
                    $('.states').show();
                }
                else {
                    $('.states').hide();
                }
            });
        })();
    </script>
}