@using Apollo.FrontStore.Models.Blog;

@model BlogPostModel

@{
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
}

@{ Html.RenderPartial("_OfferStrips"); }

<div id="blog">
    <div class="container">        
        <div class="side-nav visible-xs">
            <h3>i-Zone</h3>
            <a class="filter-refine pull-right" data-toggle="collapse" href="#refine-panel">refine</a>
            <div id="refine-panel" class="collapse">
                <h3>Refine Results</h3>
                <div class="panel-group" id="mobile-filters" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        @Html.Action("BlogMonths", "Blog")
                    </div>
                    <div class="panel panel-default">
                        @Html.Action("BlogTags", "Blog")
                    </div>
                </div>
            </div>
        </div>

        <div class="side-nav hidden-xs col-sm-3 col-lg-4">
            <div class="default">
                <h3>i-Zone</h3>
                @Html.Action("BlogMonths", "Blog")
                @Html.Action("BlogTags", "Blog")
            </div>
        </div>

        <div class="content col-sm-9 col-lg-8">
            @if (!string.IsNullOrEmpty(ViewBag.Message as string))
            {
                <div class="col-xs-12 no-gutter">
                    <p class="text-danger warning">@Html.Raw(ViewBag.Message)</p>
                </div>
            }
            <div class="post">
                <div class="post-head">
                    <a class="post-title" href="@Url.RouteUrl("Blog Post", new { urlkey = Model.UrlKey })">@Model.Title</a>
                    <span class="post-date">@Model.CreatedOn.ToString("D")</span>
                </div>
                    
                <div class="post-body">
                    @Html.Raw(Model.Body)
                </div>
                <div class="buttons row">
                    <div class="form-group col-sm-4">
                        <a href="@Url.RouteUrl("i-Zone")" class="read-more btn btn-default">BACK</a>
                    </div>
                </div>
                    
                @if (Model.Comments.Count > 0)
                {
                    <div class="comment-list">
                        <div class="title">
                            <strong>Comments</strong>
                        </div>
                        <div class="comments">
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="comment blog-comment">
                                    <div class="comment-info">
                                        <div class="user-info">
                                            @if (!string.IsNullOrEmpty(comment.ProfileName))
                                            {
                                                <span class="username">@(comment.ProfileName) says</span>
                                            }
                                            else
                                            {
                                                <span class="username">Guest says</span>
                                            }                                                
                                        </div>
                                    </div>
                                    <div class="comment-content">
                                        <div class="comment-time">
                                            <label>Created on:</label>
                                            <span class="stat-value">@comment.CreatedOn.ToString("g")</span>
                                        </div>
                                        <div class="comment-body">
                                            @Html.Raw(comment.CommentText)
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }

                @if (Model.AllowComments)
                {
                    <div class="new-comment">
                        @using (Html.BeginForm())
                        {
                            <div class="form-fields">
                                <div class="inputs">
                                    @Html.LabelFor(model => model.CommentText, new { }, ":")
                                    @Html.TextAreaFor(model => model.CommentText, new { @class = "enter-comment-text" })
                                    @Html.ValidationMessageFor(model => model.CommentText)
                                </div>
                                @if (Model.DisplayCaptcha)
                                {
                                    <div class="captcha-box">
                                        @Html.Raw(Html.GenerateCaptcha())
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class="buttons col-sm-4">
                                    <input type="submit" name="add-comment" class="btn btn-default add-comment" value="NEW COMMENT" />
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>
